@page "/totolist"
@using initiation.Data;

<div>Les TÃ¢ches</div>

<EditForm Model="@tache" OnValidSubmit="@Creer">
    <DataAnnotationsValidator />
        <div class="form-group row">
            <label for="name" class="col-sm-2 col-form-label">Nom</label>
            <div class="col-sm-10">
                <InputText id="name" class="form-control" @bind-Value="tache.Nom" />
                <ValidationMessage For="@(() => tache.Nom)" />
            </div>
        </div>
        <div class="form-group row ">
            <label for="description" class="col-sm-2 col-form-label"> Description </label>
            <div class="col-sm-10">
                <InputText id="description" class="form-control"  @bind-Value="tache.Description" />
                <ValidationMessage For="@(() => tache.Description)" />
            </div>
        </div>
    <button class="btn btn-primary" type="submit">Creer</button>
</EditForm>

<table class="table">
    <thead>
        <tr>
            <th>Nom</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    
    <tbody>
        @foreach (var item in taches)
        {
            <tr>
                <td>@item.Nom</td>
                <td>@item.Description</td>
                <td>
                    <button class="btn btn-success" type="button" @onclick="() => Update(item)"> update </button>
                    
                    <button class="btn btn-danger" type="button" @onclick="() => Delete(item)"> Delete </button>
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
    private Tache tache = new Tache();
    private List<Tache> taches = new();
    private void Creer()
    {
        Tache t = new Tache();
        t.Nom = tache.Nom;
        t.Description = tache.Description;
        taches.Add(t);

        tache.Nom = "";
        tache.Description = "";
    }

    private void Update(Tache t)
    {
        tache = t;
        @* tache.Nom = t.Nom;
        tache.Description = t.Description; *@
    }

    private void Delete(Tache t)
    {
        taches.Remove(t);
    }
}